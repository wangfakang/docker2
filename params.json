{"name":"Docker2","tagline":"docker network mode","body":"`docker网络相关配置：   `\r\n\r\ndocker的网络配置有四种模式：  \r\n其中bridge为默认不需要用--net去指定，其他三种模式需要在创建容器时使用--net去指定。    \r\n\r\n* (1)bridge模式，使用--net=bridge指定，默认设置。   \r\n* (2)none模式，使用--net=none指定。    \r\n* (3)host模式，使用--net=host指定。  \r\n* (4)container模式，使用--net=containernam:containerid　　\r\n\r\n\r\n\r\n1.container模式:   \r\n====\r\n   使用--net=container:容器名称或ID指定。（如：--net=containernam:containerid）   \r\n\r\nbridge模式：   \r\n    docker网络隔离基于网络命名空间<Network Namespace>，在物理机上创建docker容器时会为\r\n    每一个docker容器分配网络命名空间，并且把容器IP桥接到物理机的虚拟网桥上。    \r\n\r\n2.none模式：  \r\n====\r\n   此模式下创建容器是不会为容器配置任何网络参数的，如：容器网卡、IP、通信路由等，全部需要自己去配置。\r\n\r\n3.host模式：  \r\n====\r\n   此模式创建的容器没有自己独立的网络命名空间，是和物理机共享一个Network Namespace，并且\r\n   共享物理机的所有端口与IP，并且这个模式认为是不安全的。  \r\n\r\n4.container模式： \r\n====\r\n   此模式和host模式很类似，只是此模式创建容器共享的是其他容器的IP和端口而不是物理机，此模式容器\r\n   自身是不会配置网 络和端口，创建此模式容器进去后，你会发现里边的IP是你所指定的那个容器IP并且端\r\n   口也是共享的，而且其它还是互相隔离的，如进程等。       \r\n\r\n\r\n欢迎一起交流学习 \r\n====\r\n \r\n在使用中有任何问题，欢迎反馈给我，可以用以下联系方式跟我交流\r\n\r\n* 邮件(1031379296#qq.com, 把#换成@)\r\n* QQ: 1031379296\r\n* weibo: [@王发康](http://weibo.com/u/2786211992/home)\r\n\r\n\r\nThx\r\n====\r\n\r\n* chunshengsterATgmail.com\r\n\r\n\r\nAuthor\r\n====\r\n* Linux\\nginx\\golang\\c\\c++爱好者\r\n* 欢迎一起交流  一起学习# \r\n* Others say good and Others good\r\n\r\n\r\n","google":"docker net mode ","note":"Don't delete this file! It's used internally to help with page regeneration."}